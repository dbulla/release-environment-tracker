/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.nurflugel.releasetracker

import java.awt.Toolkit
import java.awt.datatransfer.DataFlavor.stringFlavor
import java.lang.management.ManagementFactory

class SplunkApp {
  companion object {
    @JvmStatic
    fun main(args: Array<String>) {
      runTheApp(args)
    }

    private fun runTheApp(args: Array<String>) {
      val runtimeMxBean = ManagementFactory.getRuntimeMXBean()
      val jvmArguments = runtimeMxBean.inputArguments.filter { it.startsWith("-X") }

      if (jvmArguments.isNotEmpty()) println("JVM arguments: $jvmArguments")
      val textToProcess = getClipboardContents()
      if (textToProcess != null) {
        val newData: List<DataRecord> = parseData(textToProcess)
        saveData(newData)
      } else {
        println("No data found in buffer to process")
      }
    }


    private fun saveData(newData: List<DataRecord>) {
      TODO("Not yet implemented")
    }

    /** Take the text copy/pasted text and parse the data we want out of it */
    private fun parseData(textToProcess: String): List<DataRecord> {
      println(textToProcess)

      val lines = textToProcess.split('\n')
      return lines
        .filter { it.startsWith("app:") }
        .map { DataRecord(it) }
    }

    private fun getClipboardContents(): String? {
      val clipboard = Toolkit.getDefaultToolkit().systemClipboard
      val contents = clipboard.getContents(null)
      val hasTransferableText = contents != null && contents.isDataFlavorSupported(stringFlavor)
      if (hasTransferableText) {
        try {
          return contents!!.getTransferData(stringFlavor) as String
        } catch (e: Exception) {
          println(e)
          e.printStackTrace()
        }
      }
      return null
    }
  }
}
